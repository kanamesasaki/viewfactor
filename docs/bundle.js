/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _viewfactor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./viewfactor */ \"./src/viewfactor.ts\");\n\nlet nRays = 100000;\nconst worker = new Worker('worker.js');\nconst canvas = document.getElementById('webgl-canvas');\nlet offscreen;\nlet time_start;\nlet time_end;\ndocument.getElementById(\"ds-disk-ana-calc\").onclick = function () {\n    let r = document.getElementById('ds-disk-r');\n    let h = document.getElementById('ds-disk-h');\n    let theta_deg = document.getElementById('ds-disk-theta');\n    let result = document.getElementById('ds-disk-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.dsToDisk(Number(r.value), Number(h.value), Number(theta_deg.value)));\n};\ndocument.getElementById(\"ds-disk-parallel-ana-calc\").onclick = function () {\n    let r = document.getElementById('ds-disk-parallel-r');\n    let h = document.getElementById('ds-disk-parallel-h');\n    let a = document.getElementById('ds-disk-parallel-a');\n    let result = document.getElementById('ds-disk-parallel-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.dsToDiskOffsetParallel(Number(r.value), Number(h.value), Number(a.value)));\n};\ndocument.getElementById(\"ds-rect-p-ana-calc\").onclick = function () {\n    let a = document.getElementById('ds-rect-p-a');\n    let b = document.getElementById('ds-rect-p-b');\n    let c = document.getElementById('ds-rect-p-c');\n    let result = document.getElementById('ds-rect-p-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.dsToRectangleParallel(Number(a.value), Number(b.value), Number(c.value)));\n};\ndocument.getElementById(\"ds-rect-v-ana-calc\").onclick = function () {\n    let a = document.getElementById('ds-rect-v-a');\n    let b = document.getElementById('ds-rect-v-b');\n    let c = document.getElementById('ds-rect-v-c');\n    let result = document.getElementById('ds-rect-v-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.dsToRectangleVertical(Number(a.value), Number(b.value), Number(c.value)));\n};\ndocument.getElementById(\"ds-sphere-ana-calc\").onclick = function () {\n    let r = document.getElementById('ds-sphere-r');\n    let h = document.getElementById('ds-sphere-h');\n    let theta_deg = document.getElementById('ds-sphere-theta');\n    let result = document.getElementById('ds-sphere-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.dsToSphere(Number(r.value), Number(h.value), Number(theta_deg.value)));\n};\ndocument.getElementById(\"ds-cylinder-ana-calc\").onclick = function () {\n    let r = document.getElementById('ds-cylinder-r');\n    let h = document.getElementById('ds-cylinder-h');\n    let l = document.getElementById('ds-cylinder-l');\n    let result = document.getElementById('ds-cylinder-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.dsToCylinder(Number(r.value), Number(h.value), Number(l.value)));\n};\ndocument.getElementById(\"ds-triangle-ana-calc\").onclick = function () {\n    let h = document.getElementById('ds-triangle-h');\n    let l = document.getElementById('ds-triangle-l');\n    let theta_deg = document.getElementById('ds-triangle-theta');\n    let result = document.getElementById('ds-triangle-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.dsToTriangle(Number(h.value), Number(l.value), Number(theta_deg.value) * Math.PI / 180.0));\n};\ndocument.getElementById(\"disk-disk-ana-calc\").onclick = function () {\n    let r1 = document.getElementById('disk-disk-r1');\n    let r2 = document.getElementById('disk-disk-r2');\n    let h = document.getElementById('disk-disk-h');\n    let result = document.getElementById('disk-disk-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.diskToDisk(Number(h.value), Number(r1.value), Number(r2.value)));\n};\ndocument.getElementById(\"rect-rect-p-ana-calc\").onclick = function () {\n    let a = document.getElementById('rect-rect-p-a');\n    let b = document.getElementById('rect-rect-p-b');\n    let c = document.getElementById('rect-rect-p-c');\n    let result = document.getElementById('rect-rect-p-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.rectToRectParalell(Number(a.value), Number(b.value), Number(c.value)));\n};\ndocument.getElementById(\"rect-rect-v-ana-calc\").onclick = function () {\n    let h = document.getElementById('rect-rect-v-h');\n    let w = document.getElementById('rect-rect-v-w');\n    let l = document.getElementById('rect-rect-v-l');\n    let result = document.getElementById('rect-rect-v-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.rectToRectVertical(Number(h.value), Number(w.value), Number(l.value)));\n};\ndocument.getElementById(\"sphere-rect-ana-calc\").onclick = function () {\n    let h = document.getElementById('sphere-rect-h');\n    let l1 = document.getElementById('sphere-rect-l1');\n    let l2 = document.getElementById('sphere-rect-l2');\n    let result = document.getElementById('sphere-rect-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.sphereToRect(Number(h.value), Number(l1.value), Number(l2.value)));\n};\ndocument.getElementById(\"sphere-disk-ana-calc\").onclick = function () {\n    let h = document.getElementById('sphere-disk-h');\n    let r = document.getElementById('sphere-disk-r');\n    let result = document.getElementById('sphere-disk-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.sphereToDisk(Number(h.value), Number(r.value)));\n};\ndocument.getElementById(\"sphere-cone-ana-calc\").onclick = function () {\n    let h = document.getElementById('sphere-cone-h');\n    let r1 = document.getElementById('sphere-cone-r1');\n    let r2 = document.getElementById('sphere-cone-r2');\n    let theta_deg = document.getElementById('sphere-cone-theta');\n    let result = document.getElementById('sphere-cone-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.sphereToCone(Number(h.value), Number(r1.value), Number(r2.value), Number(theta_deg.value) * Math.PI / 180.0));\n};\ndocument.getElementById(\"cylinder-cylinder-ana-calc\").onclick = function () {\n    let h = document.getElementById('cylinder-cylinder-h');\n    let r1 = document.getElementById('cylinder-cylinder-r1');\n    let r2 = document.getElementById('cylinder-cylinder-r2');\n    let result = document.getElementById('cylinder-cylinder-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.cylinderToCylinder(Number(h.value), Number(r1.value), Number(r2.value)));\n};\ndocument.getElementById(\"disk-cylinder-ana-calc\").onclick = function () {\n    let h = document.getElementById('disk-cylinder-h');\n    let r = document.getElementById('disk-cylinder-r');\n    let result = document.getElementById('disk-cylinder-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.diskToCylinder(Number(h.value), Number(r.value)));\n};\ndocument.getElementById(\"cone-disk-ana-calc\").onclick = function () {\n    let h = document.getElementById('cone-disk-h');\n    let r = document.getElementById('cone-disk-r');\n    let result = document.getElementById('cone-disk-ana-vf');\n    result.value = String(_viewfactor__WEBPACK_IMPORTED_MODULE_0__.coneToDisk(Number(h.value), Number(r.value)));\n};\ndocument.getElementById(\"ds-disk-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('ds-disk-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let r = document.getElementById('ds-disk-r');\n    let h = document.getElementById('ds-disk-h');\n    let theta_deg = document.getElementById('ds-disk-theta');\n    worker.postMessage({ 'nRays': nRays, 'type': 'ds-disk', 'r': Number(r.value), 'h': Number(h.value), 'theta': Number(theta_deg.value) * Math.PI / 180.0 });\n};\ndocument.getElementById(\"ds-disk-parallel-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('ds-disk-parallel-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let r = document.getElementById('ds-disk-parallel-r');\n    let h = document.getElementById('ds-disk-parallel-h');\n    let a = document.getElementById('ds-disk-parallel-a');\n    worker.postMessage({ 'nRays': nRays, 'type': 'ds-disk-parallel', 'r': Number(r.value), 'h': Number(h.value), 'a': Number(a.value) });\n};\ndocument.getElementById(\"ds-rect-p-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('ds-rect-p-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let a = document.getElementById('ds-rect-p-a');\n    let b = document.getElementById('ds-rect-p-b');\n    let c = document.getElementById('ds-rect-p-c');\n    worker.postMessage({ 'nRays': nRays, 'type': 'ds-rect-p', 'a': Number(a.value), 'b': Number(b.value), 'c': Number(c.value) });\n};\ndocument.getElementById(\"ds-rect-v-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('ds-rect-v-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let a = document.getElementById('ds-rect-v-a');\n    let b = document.getElementById('ds-rect-v-b');\n    let c = document.getElementById('ds-rect-v-c');\n    worker.postMessage({ 'nRays': nRays, 'type': 'ds-rect-v', 'a': Number(a.value), 'b': Number(b.value), 'c': Number(c.value) });\n};\ndocument.getElementById(\"ds-sphere-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('ds-sphere-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let r = document.getElementById('ds-sphere-r');\n    let h = document.getElementById('ds-sphere-h');\n    let theta_deg = document.getElementById('ds-sphere-theta');\n    worker.postMessage({ 'nRays': nRays, 'type': 'ds-sphere', 'r': Number(r.value), 'h': Number(h.value), 'theta': Number(theta_deg.value) * Math.PI / 180.0 });\n};\ndocument.getElementById(\"ds-cylinder-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('ds-cylinder-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let r = document.getElementById('ds-cylinder-r');\n    let h = document.getElementById('ds-cylinder-h');\n    let l = document.getElementById('ds-cylinder-l');\n    worker.postMessage({ 'nRays': nRays, 'type': 'ds-cylinder', 'r': Number(r.value), 'h': Number(h.value), 'l': Number(l.value) });\n};\ndocument.getElementById(\"ds-triangle-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('ds-triangle-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let h = document.getElementById('ds-triangle-h');\n    let l = document.getElementById('ds-triangle-l');\n    let theta_deg = document.getElementById('ds-triangle-theta');\n    worker.postMessage({ 'nRays': nRays, 'type': 'ds-triangle', 'h': Number(h.value), 'l': Number(l.value), 'theta': Number(theta_deg.value) * Math.PI / 180.0 });\n};\ndocument.getElementById(\"disk-disk-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('disk-disk-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let r1 = document.getElementById('disk-disk-r1');\n    let r2 = document.getElementById('disk-disk-r2');\n    let h = document.getElementById('disk-disk-h');\n    worker.postMessage({ 'nRays': nRays, 'type': 'disk-disk', 'r1': Number(r1.value), 'r2': Number(r2.value), 'h': Number(h.value) });\n};\ndocument.getElementById(\"rect-rect-p-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('rect-rect-p-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let a = document.getElementById('rect-rect-p-a');\n    let b = document.getElementById('rect-rect-p-b');\n    let c = document.getElementById('rect-rect-p-c');\n    worker.postMessage({ 'nRays': nRays, 'type': 'rect-rect-p', 'a': Number(a.value), 'b': Number(b.value), 'c': Number(c.value) });\n};\ndocument.getElementById(\"rect-rect-v-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('rect-rect-v-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let l = document.getElementById('rect-rect-v-l');\n    let w = document.getElementById('rect-rect-v-w');\n    let h = document.getElementById('rect-rect-v-h');\n    worker.postMessage({ 'nRays': nRays, 'type': 'rect-rect-v', 'l': Number(l.value), 'w': Number(w.value), 'h': Number(h.value) });\n};\ndocument.getElementById(\"sphere-rect-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('sphere-rect-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let l1 = document.getElementById('sphere-rect-l1');\n    let l2 = document.getElementById('sphere-rect-l2');\n    let h = document.getElementById('sphere-rect-h');\n    worker.postMessage({ 'nRays': nRays, 'type': 'sphere-rect', 'l1': Number(l1.value), 'l2': Number(l2.value), 'h': Number(h.value) });\n};\ndocument.getElementById(\"sphere-disk-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('sphere-disk-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let r = document.getElementById('sphere-disk-r');\n    let h = document.getElementById('sphere-disk-h');\n    worker.postMessage({ 'nRays': nRays, 'type': 'sphere-disk', 'r': Number(r.value), 'h': Number(h.value) });\n};\ndocument.getElementById(\"sphere-cone-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('sphere-cone-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let r1 = document.getElementById('sphere-cone-r1');\n    let r2 = document.getElementById('sphere-cone-r2');\n    let h = document.getElementById('sphere-cone-h');\n    let theta_deg = document.getElementById('sphere-cone-theta');\n    worker.postMessage({ 'nRays': nRays, 'type': 'sphere-cone', 'r1': Number(r1.value), 'r2': Number(r2.value), 'h': Number(h.value), 'theta': Number(theta_deg.value) * Math.PI / 180.0 });\n};\ndocument.getElementById(\"cylinder-cylinder-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('cylinder-cylinder-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let r1 = document.getElementById('cylinder-cylinder-r1');\n    let r2 = document.getElementById('cylinder-cylinder-r2');\n    let h = document.getElementById('cylinder-cylinder-h');\n    worker.postMessage({ 'nRays': nRays, 'type': 'cylinder-cylinder', 'r1': Number(r1.value), 'r2': Number(r2.value), 'h': Number(h.value) });\n};\ndocument.getElementById(\"disk-cylinder-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('disk-cylinder-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let r = document.getElementById('disk-cylinder-r');\n    let h = document.getElementById('disk-cylinder-h');\n    worker.postMessage({ 'nRays': nRays, 'type': 'disk-cylinder', 'r': Number(r.value), 'h': Number(h.value) });\n};\ndocument.getElementById(\"cone-disk-num-calc\").onclick = function () {\n    if (offscreen === undefined) {\n        let result = document.getElementById('cone-disk-num-vf');\n        result.value = 'The requested functionality is not supported';\n        return;\n    }\n    let r = document.getElementById('cone-disk-r');\n    let h = document.getElementById('cone-disk-h');\n    worker.postMessage({ 'nRays': nRays, 'type': 'cone-disk', 'r': Number(r.value), 'h': Number(h.value) });\n};\nfunction init() {\n    time_start = new Date().getTime();\n    try {\n        offscreen = canvas.transferControlToOffscreen();\n    }\n    catch (e) {\n        console.log('transferControlToOffscreen() failed\\n', e);\n        return;\n    }\n    worker.postMessage({ 'canvas': offscreen, 'nRays': nRays, 'type': 'init' }, [offscreen]);\n}\nworker.onmessage = (evt) => {\n    let result;\n    console.log(evt.data);\n    switch (evt.data.type) {\n        case 'init':\n            time_end = new Date().getTime();\n            console.log('init time: ' + (time_end - time_start) + 'ms');\n            break;\n        case 'ds-disk':\n            result = document.getElementById('ds-disk-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'ds-disk-parallel':\n            result = document.getElementById('ds-disk-parallel-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'ds-rect-p':\n            result = document.getElementById('ds-rect-p-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'ds-rect-v':\n            result = document.getElementById('ds-rect-v-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'ds-sphere':\n            result = document.getElementById('ds-sphere-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'ds-cylinder':\n            result = document.getElementById('ds-cylinder-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'ds-triangle':\n            result = document.getElementById('ds-triangle-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'disk-disk':\n            result = document.getElementById('disk-disk-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'rect-rect-p':\n            result = document.getElementById('rect-rect-p-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'rect-rect-v':\n            result = document.getElementById('rect-rect-v-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'sphere-rect':\n            result = document.getElementById('sphere-rect-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'sphere-disk':\n            result = document.getElementById('sphere-disk-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'sphere-cone':\n            result = document.getElementById('sphere-cone-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'cylinder-cylinder':\n            result = document.getElementById('cylinder-cylinder-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'disk-cylinder':\n            result = document.getElementById('disk-cylinder-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n        case 'cone-disk':\n            result = document.getElementById('cone-disk-num-vf');\n            result.value = evt.data.vf.toString();\n            break;\n    }\n};\n// Call init once the webpage has loaded\nwindow.onload = init;\n\n\n//# sourceURL=webpack://viewfactor/./src/main.ts?");

/***/ }),

/***/ "./src/viewfactor.ts":
/*!***************************!*\
  !*** ./src/viewfactor.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coneToDisk: () => (/* binding */ coneToDisk),\n/* harmony export */   cylinderToCylinder: () => (/* binding */ cylinderToCylinder),\n/* harmony export */   diskToCylinder: () => (/* binding */ diskToCylinder),\n/* harmony export */   diskToDisk: () => (/* binding */ diskToDisk),\n/* harmony export */   dsToCylinder: () => (/* binding */ dsToCylinder),\n/* harmony export */   dsToDisk: () => (/* binding */ dsToDisk),\n/* harmony export */   dsToDiskOffsetParallel: () => (/* binding */ dsToDiskOffsetParallel),\n/* harmony export */   dsToRectangleParallel: () => (/* binding */ dsToRectangleParallel),\n/* harmony export */   dsToRectangleVertical: () => (/* binding */ dsToRectangleVertical),\n/* harmony export */   dsToSphere: () => (/* binding */ dsToSphere),\n/* harmony export */   dsToTriangle: () => (/* binding */ dsToTriangle),\n/* harmony export */   rectToRectParalell: () => (/* binding */ rectToRectParalell),\n/* harmony export */   rectToRectVertical: () => (/* binding */ rectToRectVertical),\n/* harmony export */   sphereToCone: () => (/* binding */ sphereToCone),\n/* harmony export */   sphereToDisk: () => (/* binding */ sphereToDisk),\n/* harmony export */   sphereToRect: () => (/* binding */ sphereToRect)\n/* harmony export */ });\nfunction dsToDisk(r, h, theta_deg) {\n    let vf = Number.NaN;\n    let theta = theta_deg * Math.PI / 180.0;\n    if (theta <= Math.atan2(h, r)) {\n        vf = r * r / (r * r + h * h) * Math.cos(theta);\n    }\n    else if ((theta >= Math.atan2(r, h) + Math.PI / 2)) {\n        vf = 0.0;\n    }\n    return vf;\n}\nfunction dsToDiskOffsetParallel(r, h, a) {\n    let vf = Number.NaN;\n    if (r > 0.0 && h > 0.0 && a > 0.0) {\n        let H = h / a;\n        let R = r / a;\n        let Z = 1.0 + H * H + R * R;\n        vf = 0.5 * (1.0 - (Z - 2.0 * R * R) / Math.sqrt(Z * Z - 4.0 * R * R));\n    }\n    else if (r > 0.0 && h > 0.0 && a === 0.0) {\n        let H = h / r;\n        vf = 1.0 / (1.0 + H * H);\n    }\n    return vf;\n}\nfunction dsToRectangleParallel(a, b, c) {\n    let vf = Number.NaN;\n    if (a >= 0 && b >= 0 && c > 0) {\n        let A = a / c;\n        let B = b / c;\n        vf = 1.0 / (2.0 * Math.PI) * (A / Math.sqrt(1.0 + A * A) * Math.atan(B / Math.sqrt(1.0 + A * A)) + B / Math.sqrt(1.0 + B * B) * Math.atan(A / Math.sqrt(1.0 + B * B)));\n    }\n    return vf;\n}\nfunction dsToRectangleVertical(a, b, c) {\n    let vf = Number.NaN;\n    if (a >= 0 && b >= 0 && c > 0) {\n        let X = a / b;\n        let Y = c / b;\n        vf = 1.0 / (2.0 * Math.PI) * (Math.atan(1 / Y) - Y / Math.sqrt(X * X + Y * Y) * Math.atan(1 / Math.sqrt(X * X + Y * Y)));\n    }\n    return vf;\n}\nfunction dsToSphere(r, h, theta_deg) {\n    let vf = Number.NaN;\n    let theta = theta_deg * Math.PI / 180.0;\n    if (theta <= Math.acos(r / h) && h > r) {\n        vf = (r / h) ** 2 * Math.cos(theta);\n    }\n    else if ((theta >= Math.asin(r / h) + Math.PI / 2) && h > r) {\n        vf = 0.0;\n    }\n    return vf;\n}\nfunction dsToCylinder(r, h, l) {\n    let vf = Number.NaN;\n    if (h > r && r > 0.0 && l >= 0.0) {\n        let L = l / r;\n        let H = h / r;\n        let X = (1 + H) ** 2 + L * L;\n        let Y = (1 - H) ** 2 + L * L;\n        vf = L / (Math.PI * H) * (1 / L * Math.atan(L / Math.sqrt(H * H - 1)) + (X - 2 * H) / Math.sqrt(X * Y) * Math.atan(Math.sqrt((X * (H - 1)) / (Y * (H + 1)))) - Math.atan(Math.sqrt((H - 1) / (H + 1))));\n    }\n    return vf;\n}\nfunction dsToTriangle(h, l, theta) {\n    let vf = Number.NaN;\n    if (h > 0 && l > 0 && theta > 0 && theta < Math.PI / 2.0) {\n        let D = l / h;\n        let A = Math.sqrt(1 + D * D);\n        vf = D / (2.0 * Math.PI * A) * Math.atan((D * Math.tan(theta)) / A);\n    }\n    return vf;\n}\nfunction diskToDisk(a, r1, r2) {\n    let vf = Number.NaN;\n    if (a > 0.0 && r1 > 0.0 && r2 >= 0.0) {\n        let R1 = r1 / a;\n        let R2 = r2 / a;\n        let X = 1.0 + (1.0 + R2 * R2) / (R1 * R1);\n        vf = 0.5 * (X - Math.sqrt(X * X - 4.0 * (R2 / R1) ** 2));\n    }\n    return vf;\n}\nfunction rectToRectParalell(a, b, c) {\n    let vf = Number.NaN;\n    if (a > 0.0 && b > 0.0 && c > 0.0) {\n        let X = a / c;\n        let Y = b / c;\n        let X2 = X * X;\n        let Y2 = Y * Y;\n        vf = 2.0 / (Math.PI * X * Y) * (0.5 * Math.log((1 + X2) * (1 + Y2) / (1 + X2 + Y2)) + X * Math.sqrt(1 + Y2) * Math.atan(X / Math.sqrt(1 + Y2)) + Y * Math.sqrt(1 + X2) * Math.atan(Y / Math.sqrt(1 + X2)) - X * Math.atan(X) - Y * Math.atan(Y));\n    }\n    return vf;\n}\nfunction rectToRectVertical(h, w, l) {\n    let vf = Number.NaN;\n    if (h >= 0.0 && w > 0.0 && l > 0.0) {\n        let H = h / l;\n        let W = w / l;\n        let W2 = W * W;\n        let H2 = H * H;\n        vf = 1.0 / (Math.PI * W) * (0.25 * Math.log((1 + W2) * (1 + H2) / (1 + W2 + H2) * (W2 * (1 + W2 + H2) / ((1 + W2) * (W2 + H2))) ** W2 * (H2 * (1 + W2 + H2) / ((1 + H2) * (W2 + H2))) ** H2) - Math.sqrt(H2 + W2) * Math.atan(1 / Math.sqrt(H2 + W2)) + W * Math.atan(1 / W) + H * Math.atan(1 / H));\n    }\n    return vf;\n}\nfunction sphereToRect(h, l1, l2) {\n    let vf = Number.NaN;\n    if (h > 1.0 && l1 > 0.0 && l2 > 0.0) {\n        let H1 = h / l1;\n        let H2 = h / l2;\n        vf = 1 / (4 * Math.PI) * Math.atan(Math.sqrt(1 / (H1 * H1 + H2 * H2 + H1 * H1 * H2 * H2)));\n    }\n    return vf;\n}\nfunction sphereToDisk(h, r) {\n    let vf = Number.NaN;\n    if (h > 1.0 && r > 0.0) {\n        let R = r / h;\n        vf = 1.0 / 2.0 * (1.0 - 1.0 / Math.sqrt(1.0 + R * R));\n    }\n    return vf;\n}\nfunction sphereToCone(h, r1, r2, theta) {\n    let vf = Number.NaN;\n    if (h > 0.0 && r1 > 0.0 && r2 > 0.0 && theta > 0.0 && theta < Math.PI / 2) {\n        let H = h / r1;\n        let R = r2 / r1;\n        if (theta >= Math.asin(1 / (H + 1))) {\n            let temp = 1.0 + H + R / Math.tan(theta);\n            vf = 0.5 * (1.0 - temp / Math.sqrt(temp * temp + R * R));\n        }\n    }\n    return vf;\n}\nfunction cylinderToCylinder(h, r1, r2) {\n    let vf = Number.NaN;\n    let R = r2 / r1;\n    let H = h / r1;\n    if (r2 > r1 && r1 > 0.0 && h > 0.0) {\n        vf = 1 / R * (1 - (H * H + R * R - 1) / (4 * H) - 1 / Math.PI * (Math.acos((H * H - R * R + 1) / (H * H + R * R - 1)) - Math.sqrt((H * H + R * R + 1) ** 2 - 4 * R * R) / (2 * H) * Math.acos((H * H - R * R + 1) / (R * (H * H + R * R - 1))) - (H * H - R * R + 1) / (2 * H) * Math.asin(1 / R)));\n    }\n    return vf;\n}\nfunction diskToCylinder(h, r) {\n    let vf = Number.NaN;\n    let H = h / (2 * r);\n    if (r > 0.0 && h > 0.0) {\n        vf = 2.0 * H * (Math.sqrt(1 + H * H) - H);\n    }\n    return vf;\n}\nfunction coneToDisk(h, r) {\n    let vf = Number.NaN;\n    let H = h / r;\n    if (r > 0.0 && h > 0.0) {\n        vf = 1.0 / Math.sqrt(1.0 + H * H);\n    }\n    return vf;\n}\n\n\n//# sourceURL=webpack://viewfactor/./src/viewfactor.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;